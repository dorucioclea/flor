Module(
    body=[Import(names=[alias(name='torch', asname=None)]),
        Import(names=[alias(name='torch.nn', asname='nn')]),
        Import(names=[alias(name='torchvision', asname=None)]),
        Import(names=[alias(name='torchvision.transforms', asname='transforms')]),
        Import(names=[alias(name='flor', asname=None)]),
        ImportFrom(module='flor', names=[alias(name='MTK', asname='Flor')], level=0),
        ImportFrom(module='models', names=[alias(name='RNN', asname=None)], level=0),
        Assign(targets=[Name(id='device')],
            value=Call(func=Attribute(value=Name(id='torch'), attr='device'),
                args=[
                    IfExp(
                        test=Call(
                            func=Attribute(value=Attribute(value=Name(id='torch'), attr='cuda'), attr='is_available'),
                            args=[],
                            keywords=[]),
                        body=Constant(value='cuda', kind=None),
                        orelse=Constant(value='cpu', kind=None))],
                keywords=[]),
            type_comment=None),
        Expr(
            value=Call(func=Attribute(value=Name(id='flor'), attr='log'),
                args=[Constant(value='device', kind=None),
                    Call(func=Name(id='str'), args=[Name(id='device')], keywords=[])],
                keywords=[])),
        Assign(targets=[Name(id='sequence_length')], value=Constant(value=28, kind=None), type_comment=None),
        Assign(targets=[Name(id='input_size')], value=Constant(value=28, kind=None), type_comment=None),
        Assign(targets=[Name(id='hidden_size')], value=Constant(value=128, kind=None), type_comment=None),
        Assign(targets=[Name(id='num_layers')], value=Constant(value=2, kind=None), type_comment=None),
        Assign(targets=[Name(id='num_classes')], value=Constant(value=10, kind=None), type_comment=None),
        Assign(targets=[Name(id='batch_size')], value=Constant(value=100, kind=None), type_comment=None),
        Assign(targets=[Name(id='num_epochs')], value=Constant(value=2, kind=None), type_comment=None),
        Assign(targets=[Name(id='learning_rate')], value=Constant(value=0.01, kind=None), type_comment=None),
        Assign(targets=[Name(id='train_dataset')],
            value=Call(
                func=Attribute(value=Attribute(value=Name(id='torchvision'), attr='datasets'), attr='MNIST'),
                args=[],
                keywords=[keyword(arg='root', value=Constant(value='../../data/', kind=None)),
                    keyword(arg='train', value=Constant(value=True, kind=None)),
                    keyword(arg='transform',
                        value=Call(func=Attribute(value=Name(id='transforms'), attr='ToTensor'), args=[], keywords=[])),
                    keyword(arg='download', value=Constant(value=True, kind=None))]),
            type_comment=None),
        Expr(
            value=Call(func=Attribute(value=Name(id='flor'), attr='log'),
                args=[Constant(value='train_dataset', kind=None),
                    Call(func=Name(id='str'),
                        args=[Call(func=Name(id='type'), args=[Name(id='train_dataset')], keywords=[])],
                        keywords=[])],
                keywords=[])),
        Assign(targets=[Name(id='test_dataset')],
            value=Call(
                func=Attribute(value=Attribute(value=Name(id='torchvision'), attr='datasets'), attr='MNIST'),
                args=[],
                keywords=[keyword(arg='root', value=Constant(value='../../data/', kind=None)),
                    keyword(arg='train', value=Constant(value=False, kind=None)),
                    keyword(arg='transform',
                        value=Call(func=Attribute(value=Name(id='transforms'), attr='ToTensor'), args=[], keywords=[]))]),
            type_comment=None),
        Assign(targets=[Name(id='train_loader')],
            value=Call(
                func=Attribute(
                    value=Attribute(value=Attribute(value=Name(id='torch'), attr='utils'), attr='data'),
                    attr='DataLoader'),
                args=[],
                keywords=[keyword(arg='dataset', value=Name(id='train_dataset')),
                    keyword(arg='batch_size', value=Name(id='batch_size')),
                    keyword(arg='shuffle', value=Constant(value=True, kind=None))]),
            type_comment=None),
        Assign(targets=[Name(id='test_loader')],
            value=Call(
                func=Attribute(
                    value=Attribute(value=Attribute(value=Name(id='torch'), attr='utils'), attr='data'),
                    attr='DataLoader'),
                args=[],
                keywords=[keyword(arg='dataset', value=Name(id='test_dataset')),
                    keyword(arg='batch_size', value=Name(id='batch_size')),
                    keyword(arg='shuffle', value=Constant(value=False, kind=None))]),
            type_comment=None),
        Assign(targets=[Name(id='model')],
            value=Call(
                func=Attribute(
                    value=Call(func=Name(id='RNN'),
                        args=[Name(id='input_size'),
                            Name(id='hidden_size'),
                            Name(id='num_layers'),
                            Name(id='num_classes'),
                            Name(id='device')],
                        keywords=[]),
                    attr='to'),
                args=[Name(id='device')],
                keywords=[]),
            type_comment=None),
        Assign(targets=[Name(id='criterion')],
            value=Call(func=Attribute(value=Name(id='nn'), attr='CrossEntropyLoss'), args=[], keywords=[]),
            type_comment=None),
        Assign(targets=[Name(id='optimizer')],
            value=Call(
                func=Attribute(value=Attribute(value=Name(id='torch'), attr='optim'), attr='Adam'),
                args=[Call(func=Attribute(value=Name(id='model'), attr='parameters'), args=[], keywords=[])],
                keywords=[keyword(arg='lr', value=Name(id='learning_rate'))]),
            type_comment=None),
        Expr(
            value=Call(func=Attribute(value=Name(id='Flor'), attr='checkpoints'),
                args=[Name(id='model'), Name(id='optimizer')],
                keywords=[])),
        Assign(targets=[Name(id='total_step')],
            value=Call(func=Name(id='len'), args=[Name(id='train_loader')], keywords=[]),
            type_comment=None),
        For(target=Name(id='epoch'),
            iter=Call(func=Attribute(value=Name(id='Flor'), attr='loop'),
                args=[Call(func=Name(id='range'), args=[Name(id='num_epochs')], keywords=[])],
                keywords=[]),
            body=[
                Expr(
                    value=Call(func=Attribute(value=Name(id='flor'), attr='log'),
                        args=[Constant(value='learning_rate', kind=None),
                            Subscript(
                                value=Subscript(
                                    value=Attribute(value=Name(id='optimizer'), attr='param_groups'),
                                    slice=Constant(value=0, kind=None)),
                                slice=Constant(value='lr', kind=None))],
                        keywords=[])),
                For(
                    target=Tuple(elts=[Name(id='i'), Tuple(elts=[Name(id='images'), Name(id='labels')])]),
                    iter=Call(func=Attribute(value=Name(id='Flor'), attr='loop'),
                        args=[Call(func=Name(id='enumerate'), args=[Name(id='train_loader')], keywords=[])],
                        keywords=[]),
                    body=[
                        Assign(targets=[Name(id='images')],
                            value=Call(
                                func=Attribute(
                                    value=Call(func=Attribute(value=Name(id='images'), attr='reshape'),
                                        args=[UnaryOp(op=USub, operand=Constant(value=1, kind=None)),
                                            Name(id='sequence_length'),
                                            Name(id='input_size')],
                                        keywords=[]),
                                    attr='to'),
                                args=[Name(id='device')],
                                keywords=[]),
                            type_comment=None),
                        Assign(targets=[Name(id='labels')],
                            value=Call(func=Attribute(value=Name(id='labels'), attr='to'),
                                args=[Name(id='device')],
                                keywords=[]),
                            type_comment=None),
                        Assign(targets=[Name(id='outputs')],
                            value=Call(func=Name(id='model'), args=[Name(id='images')], keywords=[]),
                            type_comment=None),
                        Assign(targets=[Name(id='loss')],
                            value=Call(func=Name(id='criterion'),
                                args=[Name(id='outputs'), Name(id='labels')],
                                keywords=[]),
                            type_comment=None),
                        Expr(
                            value=Call(func=Attribute(value=Name(id='optimizer'), attr='zero_grad'),
                                args=[],
                                keywords=[])),
                        Expr(value=Call(func=Attribute(value=Name(id='loss'), attr='backward'), args=[], keywords=[])),
                        Expr(value=Call(func=Attribute(value=Name(id='optimizer'), attr='step'), args=[], keywords=[])),
                        If(
                            test=Compare(
                                left=BinOp(
                                    left=BinOp(left=Name(id='i'), op=Add, right=Constant(value=1, kind=None)),
                                    op=Mod,
                                    right=Constant(value=100, kind=None)),
                                ops=[Eq],
                                comparators=[Constant(value=0, kind=None)]),
                            body=[
                                Expr(
                                    value=Call(func=Name(id='print'),
                                        args=[
                                            Call(
                                                func=Attribute(
                                                    value=Constant(value='Epoch [{}/{}], Step [{}/{}], Loss: {:.4f}',
                                                        kind=None),
                                                    attr='format'),
                                                args=[
                                                    BinOp(left=Name(id='epoch'),
                                                        op=Add,
                                                        right=Constant(value=1, kind=None)),
                                                    Name(id='num_epochs'),
                                                    BinOp(left=Name(id='i'),
                                                        op=Add,
                                                        right=Constant(value=1, kind=None)),
                                                    Name(id='total_step'),
                                                    Call(func=Attribute(value=Name(id='flor'), attr='log'),
                                                        args=[Constant(value='loss', kind=None),
                                                            Call(func=Name(id='float'),
                                                                args=[
                                                                    Call(
                                                                        func=Attribute(value=Name(id='loss'),
                                                                            attr='item'),
                                                                        args=[],
                                                                        keywords=[])],
                                                                keywords=[])],
                                                        keywords=[])],
                                                keywords=[])],
                                        keywords=[]))],
                            orelse=[])],
                    orelse=[],
                    type_comment=None)],
            orelse=[],
            type_comment=None),
        Expr(value=Call(func=Attribute(value=Name(id='model'), attr='eval'), args=[], keywords=[])),
        With(
            items=[
                withitem(
                    context_expr=Call(func=Attribute(value=Name(id='torch'), attr='no_grad'), args=[], keywords=[]),
                    optional_vars=None)],
            body=[
                Assign(targets=[Name(id='correct')], value=Constant(value=0, kind=None), type_comment=None),
                Assign(targets=[Name(id='total')], value=Constant(value=0, kind=None), type_comment=None),
                For(target=Tuple(elts=[Name(id='images'), Name(id='labels')]),
                    iter=Name(id='test_loader'),
                    body=[
                        Assign(targets=[Name(id='images')],
                            value=Call(
                                func=Attribute(
                                    value=Call(func=Attribute(value=Name(id='images'), attr='reshape'),
                                        args=[UnaryOp(op=USub, operand=Constant(value=1, kind=None)),
                                            Name(id='sequence_length'),
                                            Name(id='input_size')],
                                        keywords=[]),
                                    attr='to'),
                                args=[Name(id='device')],
                                keywords=[]),
                            type_comment=None),
                        Assign(targets=[Name(id='labels')],
                            value=Call(func=Attribute(value=Name(id='labels'), attr='to'),
                                args=[Name(id='device')],
                                keywords=[]),
                            type_comment=None),
                        Assign(targets=[Name(id='outputs')],
                            value=Call(func=Name(id='model'), args=[Name(id='images')], keywords=[]),
                            type_comment=None),
                        Assign(targets=[Tuple(elts=[Name(id='_'), Name(id='predicted')])],
                            value=Call(func=Attribute(value=Name(id='torch'), attr='max'),
                                args=[Attribute(value=Name(id='outputs'), attr='data'), Constant(value=1, kind=None)],
                                keywords=[]),
                            type_comment=None),
                        AugAssign(target=Name(id='total'),
                            op=Add,
                            value=Call(func=Attribute(value=Name(id='labels'), attr='size'),
                                args=[Constant(value=0, kind=None)],
                                keywords=[])),
                        AugAssign(target=Name(id='correct'),
                            op=Add,
                            value=Call(
                                func=Attribute(
                                    value=Call(
                                        func=Attribute(
                                            value=Compare(left=Name(id='predicted'),
                                                ops=[Eq],
                                                comparators=[Name(id='labels')]),
                                            attr='sum'),
                                        args=[],
                                        keywords=[]),
                                    attr='item'),
                                args=[],
                                keywords=[]))],
                    orelse=[],
                    type_comment=None),
                Expr(
                    value=Call(func=Name(id='print'),
                        args=[
                            Call(
                                func=Attribute(
                                    value=Constant(
                                        value='Test Accuracy of the model on the 10000 test images: {} %',
                                        kind=None),
                                    attr='format'),
                                args=[
                                    Call(func=Attribute(value=Name(id='flor'), attr='log'),
                                        args=[Constant(value='accuracy', kind=None),
                                            BinOp(
                                                left=BinOp(left=Constant(value=100, kind=None),
                                                    op=Mult,
                                                    right=Name(id='correct')),
                                                op=Div,
                                                right=Name(id='total'))],
                                        keywords=[])],
                                keywords=[])],
                        keywords=[]))],
            type_comment=None)],
    type_ignores=[])
